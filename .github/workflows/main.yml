name: Tapis MLHub CI

on:
  push:
    branches: [ dev, staging, main ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ dev, staging, main ]

jobs:
  Set_Image_Tag:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_image_tag.outputs.image_tag }}
    steps:
      - id: set_image_tag
        name: Set_image
        shell: bash
        run: |
          # If the $GITHUB_REF contains "/refs/tags/v", then the "v" needs to be
          # removed from the $GITHUB_REF_NAME to form a proper image tag
          if [[ $GITHUB_REF =~ "/refs/tags/v"  ]]; then 
            echo version=$(echo $GITHUB_REF_NAME | sed -e 's!v-!!') >> $GITHUB_OUTPUT
          else
            echo "image_tag=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT;
          fi

  Models_Compile_Test:
    name: Models_Compile_Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Rust setup
        run: rustup toolchain install stable
      - name: Compile
        run: "cd src/models && cargo install --path ."

  Models_Build_Push_Image:
    needs:
      - Set_Image_Tag
      - Models_Compile_Test
    runs-on: ubuntu-latest
    name: Build_Push_Api_Image
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.CIC_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CIC_DOCKERHUB_ACCESS_TOKEN }}
      - name: Build_Tapis_Workflows_Api_Image
        run: docker build -f src/models/Dockerfile -t tapis/models-api:${{ needs.Set_Image_Tag.outputs.image_tag}} .
      - name: Push_All_Tags
        run: docker push --all-tags tapis/models-api